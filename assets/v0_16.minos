syntax = 0.16;



resource User {
    env DEFAULT {
        policy {
            allow = ["create", "read", "update", "delete"];

            rule {
                actor.type = RootUser;
            }

            rule {
                actor.type = resource.type;
                actor.id = resource.id;
            }
        }
    }
}


resource User {
    policy {
        allow = ["create", "read", "update", "delete"];

        rule {
            actor.type = RootUser;
        }

        rule {
            actor.type = resource.type;
            actor.id = resource.id;
        }
    }
}

resource User {
    env Testing {
        policy {
            allow = ["create", "read", "update", "delete"];

            rule {
                actor.type = RootUser;
            }

            rule {
                actor.type = resource.type;
                actor.id = resource.id;
            }
        }
    }

    env Production {
        policy {
            allow = ["create", "read", "update", "delete"];

            rule {
                actor.type = resource.type;
                actor.id = resource.id;
            }
        }
    }
}


resource User {
    env DEFAULT {
        policy {
            allow = ["create", "read", "update", "delete"];

            rule {
                actor.type = resource.type;
                actor.id = resource.id;
            }
        }
    }

    env Testing {
        policy {
            allow = ["create", "read", "update", "delete"];

            rule {
                actor.type = RootUser;
            }
        }
    }
}


resource File {
    policy {
        allow = ["read"];

        rule {
            actor.type = User;
            actor.status = active;
        }
    }

    policy {
        allow = ["write", "delete"];

        rule {
            actor.roles *= ["admin"];
            actor.status = active;
        }
    }
}


resource File {
    id = "confidential.john.data.file.id";
    
    policy {
        allow = ["read"];

        rule {
            actor.id = "john.user.Id";
        }
    }
}


resource File {
    policy {
        allow = ["read"];

        rule {
            resource.owner = actor.id;
        }
    }
}
